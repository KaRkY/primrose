type Address {
  id: ID!
  street: String!
  streetNumber: String!
  city: String!
  postalCode: String!
  state: String
  country: String!
}

type TypedAddress {
  addresses: [Address]!
  type: String!
}

type Customer {
  id: ID!
  type: String!
  relationType: String!
  fullName: String!
  displayName: String
  email: String!
  phone: String
  description: String
  addresses: [TypedAddress]
  accounts: [Account]
}

type CustomersPage {
  pageNumber: Int!
  pageSize: Int!
  totalSize: Int!
  data: [Customer]!
}

type Account {
  id: ID!
  name: String!
  customer: Customer!
  addresses: [TypedAddress]
}

type AccountsPage {
  pageNumber: Int!
  pageSize: Int!
  totalSize: Int!
  data: [Account]!
}

enum SortDirection {
  ASC
  DESC
  DEFAULT
}

input PropertySort {
  propertyName: String!
  direction: SortDirection
}

input Pageable {
  pageNumber: Int!
  pageSize: Int!
}

scalar LocalDateTime

# The Root Query for the application
type Query {
    customers(pageable: Pageable, sort: [PropertySort]): CustomersPage
    customer(id: ID!): Customer!
    accounts(customer: ID!, pageable: Pageable, sort: [PropertySort]): AccountsPage
}
